services:
  postgres:
    image: postgres:15-alpine
    container_name: uniorder_postgres
    environment:
      POSTGRES_DB: uniorder
      POSTGRES_USER: uniorder_user
      POSTGRES_PASSWORD: uniorder_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - uniorder_network

  redis:
    image: redis:7-alpine
    container_name: uniorder_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uniorder_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: uniorder_backend
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: uniorder
      DB_USER: uniorder_user
      DB_PASSWORD: uniorder_password
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secret_jwt_key_here_change_in_production
      JWT_EXPIRES_IN: 24h
      ENCRYPTION_KEY: your_32_character_encryption_key_here
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - uniorder_network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: uniorder_frontend
    environment:
      VITE_API_URL: http://localhost:3001
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - uniorder_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  uniorder_network:
    driver: bridge